/**
 * Cherwell Rest API
 * <a href=\"../../index.html\">Cherwell Rest API Documentation</a><br>Select version options from the header drop-down list (to the left of the Client Key box). Then, click Explore to view different versions of operations.
 *
 * OpenAPI spec version: 9.2.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Action', 'model/KeyValuePairStringString'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Action'), require('./KeyValuePairStringString'));
  } else {
    // Browser globals (root is window)
    if (!root.CherwellRestApi) {
      root.CherwellRestApi = {};
    }
    root.CherwellRestApi.Action = factory(root.CherwellRestApi.ApiClient, root.CherwellRestApi.Action, root.CherwellRestApi.KeyValuePairStringString);
  }
}(this, function(ApiClient, Action, KeyValuePairStringString) {
  'use strict';




  /**
   * The Action model module.
   * @module model/Action
   * @version 9.2.0
   */

  /**
   * Constructs a new <code>Action</code>.
   * @alias module:model/Action
   * @class
   */
  var exports = function() {
    var _this = this;
















  };

  /**
   * Constructs a <code>Action</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Action} obj Optional instance to populate.
   * @return {module:model/Action} The populated <code>Action</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('actionCommand')) {
        obj['actionCommand'] = ApiClient.convertToType(data['actionCommand'], 'String');
      }
      if (data.hasOwnProperty('actionType')) {
        obj['actionType'] = ApiClient.convertToType(data['actionType'], 'String');
      }
      if (data.hasOwnProperty('alwaysTextAndImage')) {
        obj['alwaysTextAndImage'] = ApiClient.convertToType(data['alwaysTextAndImage'], 'Boolean');
      }
      if (data.hasOwnProperty('beginGroup')) {
        obj['beginGroup'] = ApiClient.convertToType(data['beginGroup'], 'Boolean');
      }
      if (data.hasOwnProperty('childActions')) {
        obj['childActions'] = ApiClient.convertToType(data['childActions'], [Action]);
      }
      if (data.hasOwnProperty('dependencies')) {
        obj['dependencies'] = ApiClient.convertToType(data['dependencies'], ['String']);
      }
      if (data.hasOwnProperty('displayText')) {
        obj['displayText'] = ApiClient.convertToType(data['displayText'], 'String');
      }
      if (data.hasOwnProperty('enabled')) {
        obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Boolean');
      }
      if (data.hasOwnProperty('galleryImage')) {
        obj['galleryImage'] = ApiClient.convertToType(data['galleryImage'], 'String');
      }
      if (data.hasOwnProperty('helpText')) {
        obj['helpText'] = ApiClient.convertToType(data['helpText'], 'String');
      }
      if (data.hasOwnProperty('loginEnabledMode')) {
        obj['loginEnabledMode'] = ApiClient.convertToType(data['loginEnabledMode'], 'String');
      }
      if (data.hasOwnProperty('loginVisibilityMode')) {
        obj['loginVisibilityMode'] = ApiClient.convertToType(data['loginVisibilityMode'], 'String');
      }
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('parameters')) {
        obj['parameters'] = ApiClient.convertToType(data['parameters'], [KeyValuePairStringString]);
      }
      if (data.hasOwnProperty('visible')) {
        obj['visible'] = ApiClient.convertToType(data['visible'], 'Boolean');
      }
    }
    return obj;
  }

  /**
   * @member {String} actionCommand
   */
  exports.prototype['actionCommand'] = undefined;
  /**
   * @member {module:model/Action.ActionTypeEnum} actionType
   */
  exports.prototype['actionType'] = undefined;
  /**
   * @member {Boolean} alwaysTextAndImage
   */
  exports.prototype['alwaysTextAndImage'] = undefined;
  /**
   * @member {Boolean} beginGroup
   */
  exports.prototype['beginGroup'] = undefined;
  /**
   * @member {Array.<module:model/Action>} childActions
   */
  exports.prototype['childActions'] = undefined;
  /**
   * @member {Array.<String>} dependencies
   */
  exports.prototype['dependencies'] = undefined;
  /**
   * @member {String} displayText
   */
  exports.prototype['displayText'] = undefined;
  /**
   * @member {Boolean} enabled
   */
  exports.prototype['enabled'] = undefined;
  /**
   * @member {String} galleryImage
   */
  exports.prototype['galleryImage'] = undefined;
  /**
   * @member {String} helpText
   */
  exports.prototype['helpText'] = undefined;
  /**
   * @member {module:model/Action.LoginEnabledModeEnum} loginEnabledMode
   */
  exports.prototype['loginEnabledMode'] = undefined;
  /**
   * @member {module:model/Action.LoginVisibilityModeEnum} loginVisibilityMode
   */
  exports.prototype['loginVisibilityMode'] = undefined;
  /**
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * @member {Array.<module:model/KeyValuePairStringString>} parameters
   */
  exports.prototype['parameters'] = undefined;
  /**
   * @member {Boolean} visible
   */
  exports.prototype['visible'] = undefined;


  /**
   * Allowed values for the <code>actionType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ActionTypeEnum = {
    /**
     * value: "None"
     * @const
     */
    "None": "None",
    /**
     * value: "OneStep"
     * @const
     */
    "OneStep": "OneStep",
    /**
     * value: "Command"
     * @const
     */
    "Command": "Command",
    /**
     * value: "BuiltIn"
     * @const
     */
    "BuiltIn": "BuiltIn",
    /**
     * value: "Category"
     * @const
     */
    "Category": "Category",
    /**
     * value: "SearchGrp"
     * @const
     */
    "SearchGrp": "SearchGrp",
    /**
     * value: "Report"
     * @const
     */
    "Report": "Report",
    /**
     * value: "Dashboard"
     * @const
     */
    "Dashboard": "Dashboard",
    /**
     * value: "Calendar"
     * @const
     */
    "Calendar": "Calendar",
    /**
     * value: "Visualization"
     * @const
     */
    "Visualization": "Visualization",
    /**
     * value: "Group"
     * @const
     */
    "Group": "Group",
    /**
     * value: "Page"
     * @const
     */
    "Page": "Page",
    /**
     * value: "DocRepository"
     * @const
     */
    "DocRepository": "DocRepository",
    /**
     * value: "PortalCommand"
     * @const
     */
    "PortalCommand": "PortalCommand",
    /**
     * value: "ActionCatalog"
     * @const
     */
    "ActionCatalog": "ActionCatalog",
    /**
     * value: "OneStepForRecord"
     * @const
     */
    "OneStepForRecord": "OneStepForRecord"  };

  /**
   * Allowed values for the <code>loginEnabledMode</code> property.
   * @enum {String}
   * @readonly
   */
  exports.LoginEnabledModeEnum = {
    /**
     * value: "Anonymous"
     * @const
     */
    "Anonymous": "Anonymous",
    /**
     * value: "LoggedIn"
     * @const
     */
    "LoggedIn": "LoggedIn",
    /**
     * value: "Both"
     * @const
     */
    "Both": "Both"  };

  /**
   * Allowed values for the <code>loginVisibilityMode</code> property.
   * @enum {String}
   * @readonly
   */
  exports.LoginVisibilityModeEnum = {
    /**
     * value: "Anonymous"
     * @const
     */
    "Anonymous": "Anonymous",
    /**
     * value: "LoggedIn"
     * @const
     */
    "LoggedIn": "LoggedIn",
    /**
     * value: "Both"
     * @const
     */
    "Both": "Both"  };


  return exports;
}));


