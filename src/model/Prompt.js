/**
 * Cherwell Rest API
 * <a href=\"../../index.html\">Cherwell Rest API Documentation</a><br>Select version options from the header drop-down list (to the left of the Client Key box). Then, click Explore to view different versions of operations.
 *
 * OpenAPI spec version: 9.2.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ModelObject'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./ModelObject'));
  } else {
    // Browser globals (root is window)
    if (!root.CherwellRestApi) {
      root.CherwellRestApi = {};
    }
    root.CherwellRestApi.Prompt = factory(root.CherwellRestApi.ApiClient, root.CherwellRestApi.ModelObject);
  }
}(this, function(ApiClient, ModelObject) {
  'use strict';




  /**
   * The Prompt model module.
   * @module model/Prompt
   * @version 9.2.0
   */

  /**
   * Constructs a new <code>Prompt</code>.
   * @alias module:model/Prompt
   * @class
   */
  var exports = function() {
    var _this = this;




















  };

  /**
   * Constructs a <code>Prompt</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Prompt} obj Optional instance to populate.
   * @return {module:model/Prompt} The populated <code>Prompt</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('allowValuesOnly')) {
        obj['allowValuesOnly'] = ApiClient.convertToType(data['allowValuesOnly'], 'Boolean');
      }
      if (data.hasOwnProperty('busObId')) {
        obj['busObId'] = ApiClient.convertToType(data['busObId'], 'String');
      }
      if (data.hasOwnProperty('collectionStoreEntireRow')) {
        obj['collectionStoreEntireRow'] = ApiClient.convertToType(data['collectionStoreEntireRow'], 'String');
      }
      if (data.hasOwnProperty('collectionValueField')) {
        obj['collectionValueField'] = ApiClient.convertToType(data['collectionValueField'], 'String');
      }
      if (data.hasOwnProperty('constraintXml')) {
        obj['constraintXml'] = ApiClient.convertToType(data['constraintXml'], 'String');
      }
      if (data.hasOwnProperty('contents')) {
        obj['contents'] = ApiClient.convertToType(data['contents'], 'String');
      }
      if (data.hasOwnProperty('default')) {
        obj['default'] = ApiClient.convertToType(data['default'], 'String');
      }
      if (data.hasOwnProperty('fieldId')) {
        obj['fieldId'] = ApiClient.convertToType(data['fieldId'], 'String');
      }
      if (data.hasOwnProperty('isDateRange')) {
        obj['isDateRange'] = ApiClient.convertToType(data['isDateRange'], 'Boolean');
      }
      if (data.hasOwnProperty('listDisplayOption')) {
        obj['listDisplayOption'] = ApiClient.convertToType(data['listDisplayOption'], 'String');
      }
      if (data.hasOwnProperty('listReturnFieldId')) {
        obj['listReturnFieldId'] = ApiClient.convertToType(data['listReturnFieldId'], 'String');
      }
      if (data.hasOwnProperty('multiLine')) {
        obj['multiLine'] = ApiClient.convertToType(data['multiLine'], 'Boolean');
      }
      if (data.hasOwnProperty('promptId')) {
        obj['promptId'] = ApiClient.convertToType(data['promptId'], 'String');
      }
      if (data.hasOwnProperty('promptType')) {
        obj['promptType'] = ApiClient.convertToType(data['promptType'], 'String');
      }
      if (data.hasOwnProperty('promptTypeName')) {
        obj['promptTypeName'] = ApiClient.convertToType(data['promptTypeName'], 'String');
      }
      if (data.hasOwnProperty('required')) {
        obj['required'] = ApiClient.convertToType(data['required'], 'Boolean');
      }
      if (data.hasOwnProperty('text')) {
        obj['text'] = ApiClient.convertToType(data['text'], 'String');
      }
      if (data.hasOwnProperty('value')) {
        obj['value'] = ModelObject.constructFromObject(data['value']);
      }
      if (data.hasOwnProperty('values')) {
        obj['values'] = ApiClient.convertToType(data['values'], ['String']);
      }
    }
    return obj;
  }

  /**
   * @member {Boolean} allowValuesOnly
   */
  exports.prototype['allowValuesOnly'] = undefined;
  /**
   * @member {String} busObId
   */
  exports.prototype['busObId'] = undefined;
  /**
   * @member {String} collectionStoreEntireRow
   */
  exports.prototype['collectionStoreEntireRow'] = undefined;
  /**
   * @member {String} collectionValueField
   */
  exports.prototype['collectionValueField'] = undefined;
  /**
   * @member {String} constraintXml
   */
  exports.prototype['constraintXml'] = undefined;
  /**
   * @member {String} contents
   */
  exports.prototype['contents'] = undefined;
  /**
   * @member {String} default
   */
  exports.prototype['default'] = undefined;
  /**
   * @member {String} fieldId
   */
  exports.prototype['fieldId'] = undefined;
  /**
   * @member {Boolean} isDateRange
   */
  exports.prototype['isDateRange'] = undefined;
  /**
   * @member {module:model/Prompt.ListDisplayOptionEnum} listDisplayOption
   */
  exports.prototype['listDisplayOption'] = undefined;
  /**
   * @member {String} listReturnFieldId
   */
  exports.prototype['listReturnFieldId'] = undefined;
  /**
   * @member {Boolean} multiLine
   */
  exports.prototype['multiLine'] = undefined;
  /**
   * @member {String} promptId
   */
  exports.prototype['promptId'] = undefined;
  /**
   * @member {module:model/Prompt.PromptTypeEnum} promptType
   */
  exports.prototype['promptType'] = undefined;
  /**
   * @member {String} promptTypeName
   */
  exports.prototype['promptTypeName'] = undefined;
  /**
   * @member {Boolean} required
   */
  exports.prototype['required'] = undefined;
  /**
   * @member {String} text
   */
  exports.prototype['text'] = undefined;
  /**
   * @member {module:model/ModelObject} value
   */
  exports.prototype['value'] = undefined;
  /**
   * @member {Array.<String>} values
   */
  exports.prototype['values'] = undefined;


  /**
   * Allowed values for the <code>listDisplayOption</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ListDisplayOptionEnum = {
    /**
     * value: "Auto"
     * @const
     */
    "Auto": "Auto",
    /**
     * value: "Text"
     * @const
     */
    "Text": "Text",
    /**
     * value: "Combo"
     * @const
     */
    "Combo": "Combo",
    /**
     * value: "GridList"
     * @const
     */
    "GridList": "GridList",
    /**
     * value: "SimpleList"
     * @const
     */
    "SimpleList": "SimpleList",
    /**
     * value: "PromptSimpleGrid"
     * @const
     */
    "PromptSimpleGrid": "PromptSimpleGrid"  };

  /**
   * Allowed values for the <code>promptType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.PromptTypeEnum = {
    /**
     * value: "None"
     * @const
     */
    "None": "None",
    /**
     * value: "Text"
     * @const
     */
    "Text": "Text",
    /**
     * value: "Number"
     * @const
     */
    "Number": "Number",
    /**
     * value: "DateTime"
     * @const
     */
    "DateTime": "DateTime",
    /**
     * value: "Logical"
     * @const
     */
    "Logical": "Logical",
    /**
     * value: "Binary"
     * @const
     */
    "Binary": "Binary",
    /**
     * value: "DateOnly"
     * @const
     */
    "DateOnly": "DateOnly",
    /**
     * value: "TimeOnly"
     * @const
     */
    "TimeOnly": "TimeOnly",
    /**
     * value: "Json"
     * @const
     */
    "Json": "Json",
    /**
     * value: "JsonArray"
     * @const
     */
    "JsonArray": "JsonArray",
    /**
     * value: "Xml"
     * @const
     */
    "Xml": "Xml",
    /**
     * value: "XmlCollection"
     * @const
     */
    "XmlCollection": "XmlCollection",
    /**
     * value: "TimeValue"
     * @const
     */
    "TimeValue": "TimeValue"  };


  return exports;
}));


