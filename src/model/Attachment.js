/**
 * Cherwell Rest API
 * <a href=\"../../index.html\">Cherwell Rest API Documentation</a><br>Select version options from the header drop-down list (to the left of the Client Key box). Then, click Explore to view different versions of operations.
 *
 * OpenAPI spec version: 9.2.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Link'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Link'));
  } else {
    // Browser globals (root is window)
    if (!root.CherwellRestApi) {
      root.CherwellRestApi = {};
    }
    root.CherwellRestApi.Attachment = factory(root.CherwellRestApi.ApiClient, root.CherwellRestApi.Link);
  }
}(this, function(ApiClient, Link) {
  'use strict';




  /**
   * The Attachment model module.
   * @module model/Attachment
   * @version 9.2.0
   */

  /**
   * Constructs a new <code>Attachment</code>.
   * @alias module:model/Attachment
   * @class
   */
  var exports = function() {
    var _this = this;


















  };

  /**
   * Constructs a <code>Attachment</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Attachment} obj Optional instance to populate.
   * @return {module:model/Attachment} The populated <code>Attachment</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('attachedBusObId')) {
        obj['attachedBusObId'] = ApiClient.convertToType(data['attachedBusObId'], 'String');
      }
      if (data.hasOwnProperty('attachedBusObRecId')) {
        obj['attachedBusObRecId'] = ApiClient.convertToType(data['attachedBusObRecId'], 'String');
      }
      if (data.hasOwnProperty('attachmentFileId')) {
        obj['attachmentFileId'] = ApiClient.convertToType(data['attachmentFileId'], 'String');
      }
      if (data.hasOwnProperty('attachmentFileName')) {
        obj['attachmentFileName'] = ApiClient.convertToType(data['attachmentFileName'], 'String');
      }
      if (data.hasOwnProperty('attachmentFileType')) {
        obj['attachmentFileType'] = ApiClient.convertToType(data['attachmentFileType'], 'String');
      }
      if (data.hasOwnProperty('attachmentId')) {
        obj['attachmentId'] = ApiClient.convertToType(data['attachmentId'], 'String');
      }
      if (data.hasOwnProperty('attachmentType')) {
        obj['attachmentType'] = ApiClient.convertToType(data['attachmentType'], 'String');
      }
      if (data.hasOwnProperty('busObId')) {
        obj['busObId'] = ApiClient.convertToType(data['busObId'], 'String');
      }
      if (data.hasOwnProperty('busObRecId')) {
        obj['busObRecId'] = ApiClient.convertToType(data['busObRecId'], 'String');
      }
      if (data.hasOwnProperty('comment')) {
        obj['comment'] = ApiClient.convertToType(data['comment'], 'String');
      }
      if (data.hasOwnProperty('created')) {
        obj['created'] = ApiClient.convertToType(data['created'], 'Date');
      }
      if (data.hasOwnProperty('displayText')) {
        obj['displayText'] = ApiClient.convertToType(data['displayText'], 'String');
      }
      if (data.hasOwnProperty('links')) {
        obj['links'] = ApiClient.convertToType(data['links'], [Link]);
      }
      if (data.hasOwnProperty('owner')) {
        obj['owner'] = ApiClient.convertToType(data['owner'], 'String');
      }
      if (data.hasOwnProperty('scope')) {
        obj['scope'] = ApiClient.convertToType(data['scope'], 'String');
      }
      if (data.hasOwnProperty('scopeOwner')) {
        obj['scopeOwner'] = ApiClient.convertToType(data['scopeOwner'], 'String');
      }
      if (data.hasOwnProperty('type')) {
        obj['type'] = ApiClient.convertToType(data['type'], 'String');
      }
    }
    return obj;
  }

  /**
   * @member {String} attachedBusObId
   */
  exports.prototype['attachedBusObId'] = undefined;
  /**
   * @member {String} attachedBusObRecId
   */
  exports.prototype['attachedBusObRecId'] = undefined;
  /**
   * @member {String} attachmentFileId
   */
  exports.prototype['attachmentFileId'] = undefined;
  /**
   * @member {String} attachmentFileName
   */
  exports.prototype['attachmentFileName'] = undefined;
  /**
   * @member {String} attachmentFileType
   */
  exports.prototype['attachmentFileType'] = undefined;
  /**
   * @member {String} attachmentId
   */
  exports.prototype['attachmentId'] = undefined;
  /**
   * @member {module:model/Attachment.AttachmentTypeEnum} attachmentType
   */
  exports.prototype['attachmentType'] = undefined;
  /**
   * @member {String} busObId
   */
  exports.prototype['busObId'] = undefined;
  /**
   * @member {String} busObRecId
   */
  exports.prototype['busObRecId'] = undefined;
  /**
   * @member {String} comment
   */
  exports.prototype['comment'] = undefined;
  /**
   * @member {Date} created
   */
  exports.prototype['created'] = undefined;
  /**
   * @member {String} displayText
   */
  exports.prototype['displayText'] = undefined;
  /**
   * @member {Array.<module:model/Link>} links
   */
  exports.prototype['links'] = undefined;
  /**
   * @member {String} owner
   */
  exports.prototype['owner'] = undefined;
  /**
   * @member {module:model/Attachment.ScopeEnum} scope
   */
  exports.prototype['scope'] = undefined;
  /**
   * @member {String} scopeOwner
   */
  exports.prototype['scopeOwner'] = undefined;
  /**
   * @member {module:model/Attachment.TypeEnum} type
   */
  exports.prototype['type'] = undefined;


  /**
   * Allowed values for the <code>attachmentType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.AttachmentTypeEnum = {
    /**
     * value: "Imported"
     * @const
     */
    "Imported": "Imported",
    /**
     * value: "Linked"
     * @const
     */
    "Linked": "Linked",
    /**
     * value: "URL"
     * @const
     */
    "URL": "URL"  };

  /**
   * Allowed values for the <code>scope</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ScopeEnum = {
    /**
     * value: "None"
     * @const
     */
    "None": "None",
    /**
     * value: "Global"
     * @const
     */
    "Global": "Global",
    /**
     * value: "Team"
     * @const
     */
    "Team": "Team",
    /**
     * value: "Persona"
     * @const
     */
    "Persona": "Persona",
    /**
     * value: "SecurityGroup"
     * @const
     */
    "SecurityGroup": "SecurityGroup",
    /**
     * value: "User"
     * @const
     */
    "User": "User",
    /**
     * value: "UserInPersona"
     * @const
     */
    "UserInPersona": "UserInPersona",
    /**
     * value: "OtherUsers"
     * @const
     */
    "OtherUsers": "OtherUsers",
    /**
     * value: "Core"
     * @const
     */
    "Core": "Core",
    /**
     * value: "BusIntel"
     * @const
     */
    "BusIntel": "BusIntel",
    /**
     * value: "FromResource"
     * @const
     */
    "FromResource": "FromResource",
    /**
     * value: "Site"
     * @const
     */
    "Site": "Site",
    /**
     * value: "Custom"
     * @const
     */
    "Custom": "Custom"  };

  /**
   * Allowed values for the <code>type</code> property.
   * @enum {String}
   * @readonly
   */
  exports.TypeEnum = {
    /**
     * value: "None"
     * @const
     */
    "None": "None",
    /**
     * value: "File"
     * @const
     */
    "File": "File",
    /**
     * value: "FileManagerFile"
     * @const
     */
    "FileManagerFile": "FileManagerFile",
    /**
     * value: "BusOb"
     * @const
     */
    "BusOb": "BusOb",
    /**
     * value: "History"
     * @const
     */
    "History": "History",
    /**
     * value: "Other"
     * @const
     */
    "Other": "Other"  };


  return exports;
}));


