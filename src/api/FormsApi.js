/**
 * Cherwell Rest API
 * <a href=\"../../index.html\">Cherwell Rest API Documentation</a><br>Select version options from the header drop-down list (to the left of the Client Key box). Then, click Explore to view different versions of operations.
 *
 * OpenAPI spec version: 9.2.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/MobileFormResponse'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/MobileFormResponse'));
  } else {
    // Browser globals (root is window)
    if (!root.CherwellRestApi) {
      root.CherwellRestApi = {};
    }
    root.CherwellRestApi.FormsApi = factory(root.CherwellRestApi.ApiClient, root.CherwellRestApi.MobileFormResponse);
  }
}(this, function(ApiClient, MobileFormResponse) {
  'use strict';

  /**
   * Forms service.
   * @module api/FormsApi
   * @version 9.2.0
   */

  /**
   * Constructs a new FormsApi. 
   * @alias module:api/FormsApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the formsGetMobileFormForBusObByIdAndPublicIdV1 operation.
     * @callback module:api/FormsApi~formsGetMobileFormForBusObByIdAndPublicIdV1Callback
     * @param {String} error Error message, if any.
     * @param {module:model/MobileFormResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get mobile form by BusObId and PublicID
     * Operation that gets a mobile form for a specific business object by Business Object ID and Public ID.
     * @param {String} busobid Specify the Business Object ID.
     * @param {String} publicid Specify the Business Object public ID.
     * @param {Object} opts Optional parameters
     * @param {Boolean} opts.foredit Flag to get the edit mode version of a form.
     * @param {String} opts.formid Specify the form ID if the default is not desired.
     * @param {module:api/FormsApi~formsGetMobileFormForBusObByIdAndPublicIdV1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/MobileFormResponse}
     */
    this.formsGetMobileFormForBusObByIdAndPublicIdV1 = function(busobid, publicid, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'busobid' is set
      if (busobid === undefined || busobid === null) {
        throw new Error("Missing the required parameter 'busobid' when calling formsGetMobileFormForBusObByIdAndPublicIdV1");
      }

      // verify the required parameter 'publicid' is set
      if (publicid === undefined || publicid === null) {
        throw new Error("Missing the required parameter 'publicid' when calling formsGetMobileFormForBusObByIdAndPublicIdV1");
      }


      var pathParams = {
        'busobid': busobid,
        'publicid': publicid
      };
      var queryParams = {
        'foredit': opts['foredit'],
        'formid': opts['formid'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2'];
      var contentTypes = [];
      var accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      var returnType = MobileFormResponse;

      return this.apiClient.callApi(
        '/api/V1/getmobileformforbusob/busobid/{busobid}/publicid/{publicid}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the formsGetMobileFormForBusObByIdAndRecIdV1 operation.
     * @callback module:api/FormsApi~formsGetMobileFormForBusObByIdAndRecIdV1Callback
     * @param {String} error Error message, if any.
     * @param {module:model/MobileFormResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get mobile form by BusObId and BusObRecId
     * Operation that gets a mobile form for a specific business object by Business Object ID and record ID.
     * @param {String} busobid Specify the Business Object ID.
     * @param {String} busobrecid Specify the Business Object record ID.
     * @param {Object} opts Optional parameters
     * @param {Boolean} opts.foredit Flag to get the edit mode version of a form.
     * @param {String} opts.formid Specify the form ID if the default is not desired.
     * @param {module:api/FormsApi~formsGetMobileFormForBusObByIdAndRecIdV1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/MobileFormResponse}
     */
    this.formsGetMobileFormForBusObByIdAndRecIdV1 = function(busobid, busobrecid, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'busobid' is set
      if (busobid === undefined || busobid === null) {
        throw new Error("Missing the required parameter 'busobid' when calling formsGetMobileFormForBusObByIdAndRecIdV1");
      }

      // verify the required parameter 'busobrecid' is set
      if (busobrecid === undefined || busobrecid === null) {
        throw new Error("Missing the required parameter 'busobrecid' when calling formsGetMobileFormForBusObByIdAndRecIdV1");
      }


      var pathParams = {
        'busobid': busobid,
        'busobrecid': busobrecid
      };
      var queryParams = {
        'foredit': opts['foredit'],
        'formid': opts['formid'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2'];
      var contentTypes = [];
      var accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      var returnType = MobileFormResponse;

      return this.apiClient.callApi(
        '/api/V1/getmobileformforbusob/busobid/{busobid}/busobrecid/{busobrecid}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the formsGetMobileFormForBusObByNameAndPublicIdV1 operation.
     * @callback module:api/FormsApi~formsGetMobileFormForBusObByNameAndPublicIdV1Callback
     * @param {String} error Error message, if any.
     * @param {module:model/MobileFormResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get mobile form by BusObName and PublicId
     * Operation that gets a mobile form for a specific business object by Business Object name and public ID.
     * @param {String} busobname Specify the Business Object name.
     * @param {String} publicid Specify the Business Object public ID.
     * @param {Object} opts Optional parameters
     * @param {Boolean} opts.foredit Flag to get the edit mode version of a form.
     * @param {String} opts.formid Specify the form ID if the default is not desired.
     * @param {module:api/FormsApi~formsGetMobileFormForBusObByNameAndPublicIdV1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/MobileFormResponse}
     */
    this.formsGetMobileFormForBusObByNameAndPublicIdV1 = function(busobname, publicid, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'busobname' is set
      if (busobname === undefined || busobname === null) {
        throw new Error("Missing the required parameter 'busobname' when calling formsGetMobileFormForBusObByNameAndPublicIdV1");
      }

      // verify the required parameter 'publicid' is set
      if (publicid === undefined || publicid === null) {
        throw new Error("Missing the required parameter 'publicid' when calling formsGetMobileFormForBusObByNameAndPublicIdV1");
      }


      var pathParams = {
        'busobname': busobname,
        'publicid': publicid
      };
      var queryParams = {
        'foredit': opts['foredit'],
        'formid': opts['formid'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2'];
      var contentTypes = [];
      var accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      var returnType = MobileFormResponse;

      return this.apiClient.callApi(
        '/api/V1/getmobileformforbusob/busobname/{busobname}/publicid/{publicid}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the formsGetMobileFormForBusObByNameAndRecIdV1 operation.
     * @callback module:api/FormsApi~formsGetMobileFormForBusObByNameAndRecIdV1Callback
     * @param {String} error Error message, if any.
     * @param {module:model/MobileFormResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get mobile form by BusObName and record ID.
     * Operation that gets a mobile form for a specific business object by Business Object name and record ID.
     * @param {String} busobname Specify the Business Object name.
     * @param {String} busobrecid Specify the Business Object record ID.
     * @param {Object} opts Optional parameters
     * @param {Boolean} opts.foredit Flag to get the edit mode version of a form.
     * @param {String} opts.formid Specify the form ID if the default is not desired.
     * @param {module:api/FormsApi~formsGetMobileFormForBusObByNameAndRecIdV1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/MobileFormResponse}
     */
    this.formsGetMobileFormForBusObByNameAndRecIdV1 = function(busobname, busobrecid, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'busobname' is set
      if (busobname === undefined || busobname === null) {
        throw new Error("Missing the required parameter 'busobname' when calling formsGetMobileFormForBusObByNameAndRecIdV1");
      }

      // verify the required parameter 'busobrecid' is set
      if (busobrecid === undefined || busobrecid === null) {
        throw new Error("Missing the required parameter 'busobrecid' when calling formsGetMobileFormForBusObByNameAndRecIdV1");
      }


      var pathParams = {
        'busobname': busobname,
        'busobrecid': busobrecid
      };
      var queryParams = {
        'foredit': opts['foredit'],
        'formid': opts['formid'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2'];
      var contentTypes = [];
      var accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      var returnType = MobileFormResponse;

      return this.apiClient.callApi(
        '/api/V1/getmobileformforbusob/busobname/{busobname}/busobrecid/{busobrecid}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
