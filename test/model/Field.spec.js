/**
 * Cherwell Rest API
 * <a href=\"../../index.html\">Cherwell Rest API Documentation</a><br>Select version options from the header drop-down list (to the left of the Client Key box). Then, click Explore to view different versions of operations.
 *
 * OpenAPI spec version: 9.2.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CherwellRestApi);
  }
}(this, function(expect, CherwellRestApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CherwellRestApi.Field();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Field', function() {
    it('should create an instance of Field', function() {
      // uncomment below and update the code to test Field
      //var instance = new CherwellRestApi.Field();
      //expect(instance).to.be.a(CherwellRestApi.Field);
    });

    it('should have the property caption (base name: "caption")', function() {
      // uncomment below and update the code to test the property caption
      //var instance = new CherwellRestApi.Field();
      //expect(instance).to.be();
    });

    it('should have the property currencyCulture (base name: "currencyCulture")', function() {
      // uncomment below and update the code to test the property currencyCulture
      //var instance = new CherwellRestApi.Field();
      //expect(instance).to.be();
    });

    it('should have the property currencySymbol (base name: "currencySymbol")', function() {
      // uncomment below and update the code to test the property currencySymbol
      //var instance = new CherwellRestApi.Field();
      //expect(instance).to.be();
    });

    it('should have the property decimalDigits (base name: "decimalDigits")', function() {
      // uncomment below and update the code to test the property decimalDigits
      //var instance = new CherwellRestApi.Field();
      //expect(instance).to.be();
    });

    it('should have the property defaultSortOrderAscending (base name: "defaultSortOrderAscending")', function() {
      // uncomment below and update the code to test the property defaultSortOrderAscending
      //var instance = new CherwellRestApi.Field();
      //expect(instance).to.be();
    });

    it('should have the property fieldName (base name: "fieldName")', function() {
      // uncomment below and update the code to test the property fieldName
      //var instance = new CherwellRestApi.Field();
      //expect(instance).to.be();
    });

    it('should have the property fullFieldId (base name: "fullFieldId")', function() {
      // uncomment below and update the code to test the property fullFieldId
      //var instance = new CherwellRestApi.Field();
      //expect(instance).to.be();
    });

    it('should have the property hasDefaultSortField (base name: "hasDefaultSortField")', function() {
      // uncomment below and update the code to test the property hasDefaultSortField
      //var instance = new CherwellRestApi.Field();
      //expect(instance).to.be();
    });

    it('should have the property fieldId (base name: "fieldId")', function() {
      // uncomment below and update the code to test the property fieldId
      //var instance = new CherwellRestApi.Field();
      //expect(instance).to.be();
    });

    it('should have the property isBinary (base name: "isBinary")', function() {
      // uncomment below and update the code to test the property isBinary
      //var instance = new CherwellRestApi.Field();
      //expect(instance).to.be();
    });

    it('should have the property isCurrency (base name: "isCurrency")', function() {
      // uncomment below and update the code to test the property isCurrency
      //var instance = new CherwellRestApi.Field();
      //expect(instance).to.be();
    });

    it('should have the property isDateTime (base name: "isDateTime")', function() {
      // uncomment below and update the code to test the property isDateTime
      //var instance = new CherwellRestApi.Field();
      //expect(instance).to.be();
    });

    it('should have the property isFilterAllowed (base name: "isFilterAllowed")', function() {
      // uncomment below and update the code to test the property isFilterAllowed
      //var instance = new CherwellRestApi.Field();
      //expect(instance).to.be();
    });

    it('should have the property isLogical (base name: "isLogical")', function() {
      // uncomment below and update the code to test the property isLogical
      //var instance = new CherwellRestApi.Field();
      //expect(instance).to.be();
    });

    it('should have the property isNumber (base name: "isNumber")', function() {
      // uncomment below and update the code to test the property isNumber
      //var instance = new CherwellRestApi.Field();
      //expect(instance).to.be();
    });

    it('should have the property isShortDate (base name: "isShortDate")', function() {
      // uncomment below and update the code to test the property isShortDate
      //var instance = new CherwellRestApi.Field();
      //expect(instance).to.be();
    });

    it('should have the property isShortTime (base name: "isShortTime")', function() {
      // uncomment below and update the code to test the property isShortTime
      //var instance = new CherwellRestApi.Field();
      //expect(instance).to.be();
    });

    it('should have the property isVisible (base name: "isVisible")', function() {
      // uncomment below and update the code to test the property isVisible
      //var instance = new CherwellRestApi.Field();
      //expect(instance).to.be();
    });

    it('should have the property sortable (base name: "sortable")', function() {
      // uncomment below and update the code to test the property sortable
      //var instance = new CherwellRestApi.Field();
      //expect(instance).to.be();
    });

    it('should have the property sortOrder (base name: "sortOrder")', function() {
      // uncomment below and update the code to test the property sortOrder
      //var instance = new CherwellRestApi.Field();
      //expect(instance).to.be();
    });

    it('should have the property storageName (base name: "storageName")', function() {
      // uncomment below and update the code to test the property storageName
      //var instance = new CherwellRestApi.Field();
      //expect(instance).to.be();
    });

    it('should have the property wholeDigits (base name: "wholeDigits")', function() {
      // uncomment below and update the code to test the property wholeDigits
      //var instance = new CherwellRestApi.Field();
      //expect(instance).to.be();
    });

  });

}));
