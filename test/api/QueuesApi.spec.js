/**
 * Cherwell Rest API
 * <a href=\"../../index.html\">Cherwell Rest API Documentation</a><br>Select version options from the header drop-down list (to the left of the Client Key box). Then, click Explore to view different versions of operations.
 *
 * OpenAPI spec version: 9.2.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CherwellRestApi);
  }
}(this, function(expect, CherwellRestApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CherwellRestApi.QueuesApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('QueuesApi', function() {
    describe('queuesAddItemToQueueV1', function() {
      it('should call queuesAddItemToQueueV1 successfully', function(done) {
        //uncomment below and update the code to test queuesAddItemToQueueV1
        //instance.queuesAddItemToQueueV1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('queuesCheckInQueueItemV1', function() {
      it('should call queuesCheckInQueueItemV1 successfully', function(done) {
        //uncomment below and update the code to test queuesCheckInQueueItemV1
        //instance.queuesCheckInQueueItemV1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('queuesCheckOutQueueItemV1', function() {
      it('should call queuesCheckOutQueueItemV1 successfully', function(done) {
        //uncomment below and update the code to test queuesCheckOutQueueItemV1
        //instance.queuesCheckOutQueueItemV1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('queuesGetQueuesFolderV1', function() {
      it('should call queuesGetQueuesFolderV1 successfully', function(done) {
        //uncomment below and update the code to test queuesGetQueuesFolderV1
        //instance.queuesGetQueuesFolderV1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('queuesGetQueuesScopeOwnerV1', function() {
      it('should call queuesGetQueuesScopeOwnerV1 successfully', function(done) {
        //uncomment below and update the code to test queuesGetQueuesScopeOwnerV1
        //instance.queuesGetQueuesScopeOwnerV1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('queuesGetQueuesScopeV1', function() {
      it('should call queuesGetQueuesScopeV1 successfully', function(done) {
        //uncomment below and update the code to test queuesGetQueuesScopeV1
        //instance.queuesGetQueuesScopeV1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('queuesGetQueuesV1', function() {
      it('should call queuesGetQueuesV1 successfully', function(done) {
        //uncomment below and update the code to test queuesGetQueuesV1
        //instance.queuesGetQueuesV1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('queuesRemoveItemFromQueueV1', function() {
      it('should call queuesRemoveItemFromQueueV1 successfully', function(done) {
        //uncomment below and update the code to test queuesRemoveItemFromQueueV1
        //instance.queuesRemoveItemFromQueueV1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
